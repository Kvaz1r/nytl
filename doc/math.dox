/** @defgroup math
 * The math module deals with utility template classes and functions. Especially the \c vec class is designed with glsl in mind.
 * It does additionally include all sort of classes useful for graphical computing. 
 * There are some specific design patterns, so are most of the operations or tests you can do with a class defined as global functions instead of member functions.
 * @{
 */
 
 
/**  ********************************
\class nytl::vec
\brief basic vector class with templated size and type

\class nytl::mat
\brief matrix class with templated size and precision

\class nytl::triangle
\brief triangle class with templated dimension and precision

\class nytl::rect
\brief rectangle class with templated dimension and precision. Rectangles with dimensions > 2 can be understood as box, tesseract etc.

\class nytl::line
\brief line class with templated dimension and precision.
*/


/** ********************************
\file vec.hpp
\brief 	vec header file
		
\file mat.hpp
\brief mat header file

\file triangle.hpp
\brief triangle header file

\file line.hpp
\brief triangle header file

\file rect.hpp
\brief rect header file

\file transformable.hpp
\brief defines the transform2, transform3 and the transformable helper classes.

\file constants.hpp
\brief defines some mathematical constants and simple scalar operations

\file math.hpp
\brief includes all nytl math headers
*/
		
/** @} */
 
 
 /** @defgroup utlity
 *
 * utility group
 *
 */
 
 /** @defgroup function
 *
 * function group
 *
 */